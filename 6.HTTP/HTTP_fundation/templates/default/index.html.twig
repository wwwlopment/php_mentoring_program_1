{% extends 'base.html.twig' %}

{% block body %}
    <div id="wrapper">
        <h1 class="col-sm-offset-3">Files Upload</h1><hr>
        <div id="container" class="row col-sm-10 col-sm-offset-1">
            <div class="form-group">
                <label class="col-sm-2 control-label required" for="">Add Image</label>
                <div class="col-sm-10">
                    <div class="dropzone"></div>
                </div>
            </div>
            <div class="col-xs-4 pull-right">
                <input hidden type="submit" class="btn btn-block btn-primary" value="Submit"/>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
            Dropzone.autoDiscover = false;
            var dropzone_default = new Dropzone(".dropzone", {
                url: '{{ path('fileuploadhandler') }}' ,
                maxFiles: 5,
                dictMaxFilesExceeded: 'Only 5 Image can be uploaded',
                acceptedFiles: 'image/*',
                maxFilesize: 3,  // in Mb
                addRemoveLinks: true,
                init: function () {
                    this.on("maxfilesexceeded", function(file) {
                        this.removeFile(file);
                    });
                    this.on("sending", function(file, xhr, formData) {
                        formData.append("key", "value");
                    });
                    this.on("success", function(file, response) {
                        iziToast.show({
                            title: 'Success!',
                            message: 'File Uploaded: <b>'+ response.originalFileName +'</b>.<br>Saved as ' + response.fileName,
                            color: 'green',
                            position: 'topCenter'
                        });
                        file.previewElement.children[6].id = response.fileName;
                    });
                    this.on("removedfile", function(file) {
                        var fileName = file.previewElement.children[6].id;
                        $.ajax({
                            type: 'DELETE',
                            url: '{{ path('deleteFileResource') }}',
                            data: {
                                fileName: fileName
                            },
                            dataType: 'json'
                        }).done(function (resp) {
                            if (resp.deleted) {
                                iziToast.show({
                                    title: 'Deleted!',
                                    message: 'Deleted File: <b>'+ fileName + '</b>.',
                                    color: 'yellow',
                                    position: 'topCenter'
                                });
                            } else if (resp.error) {
                                iziToast.show({
                                    title: 'Error!',
                                    message: resp.error,
                                    color: 'red',
                                    position: 'topCenter'
                                });
                            }
                        }).fail(function(resp) {
                            console.error('xhr failed', resp);
                            return false;
                        });
                    });
                    this.on("error", function(file, errorMessage) {
                        console.error('Error', errorMessage);
                        iziToast.show({
                            title: 'Upload Failed',
                            message: errorMessage,
                            color: 'red',
                            position: 'topCenter'
                        });
                    });
                }
            });
    </script>
{% endblock %}
